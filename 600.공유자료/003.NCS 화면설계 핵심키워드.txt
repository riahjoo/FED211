[ 003.NCS 화면설계 핵심키워드 ]

1. [기본 틀을 만드는 것] - 소프트웨어 아키텍처 

2. [UI의 세 가지 분야]
- 정보 제공과 기능 전달을 위한 물리적 제어 분야
- 콘텐츠의 상세적 표현과 전체적 구성에 관한 분야
- 사용자의 편의성에 맞춰 쉽고 간편하게 사용 가능하게 하는 기능적 분야

3. [UI의 설계 원칙]
- 직관성 : 누구나 쉽게 이해하고 사용할 수 있어야한다.
- 유효성 : 사용자의 목적을 정확하게 달성하여야 한다.
- 학습성 : 누구나 쉽게 배우고 익힐 수 있어야 한다.
- 유연성 : 사용자의 요구사항을 최대한 수용하며, 오류를 최소하여야 한다.

4. [UI의 설계 지침]
- 사용자 중심 : 사용자가 이해하기 편하고 쉽게 사용할 수 있는 환경을 제공하며 실사용자에 대한
이해가 바탕이 되어야한다.
- 일관성 : 버튼이나 조작 방법을 사용자가 기억하기 쉽고 빠른 습득이 가능하게 설계하여야 한다.
- 단순성 : 조작 방법은 가장 간단하게 작동이 가능하도록 하여 인지적 부담을 감소시켜야 한다.
- 결과 예측 가능 : 작동시킬 기능만 보고도 결과 예측이 가능하여야 한다.
- 가시성 : 주요 기능을 메인 화면에 노출하여 조작이 쉽도록 하여야 한다.
- 표준화 : 디자인을 표준화하여 기능 구조의 선행학습 이후 쉽게 사용할 수 있어야 한다.
- 접근성 : 사용자의 직무,연령,성별 등 다양한 계층을 수용하여야 한다.
- 명확성 : 사용자가 개념적으로 쉽게 인지하여야 한다.
- 오류 발생 해결 : 사용자가 오류에 대한 상황을 정확히 인지할 수 있어야 한다.

5. [UI가 필요한 이유]
- 구현하고자 하는 결과의 오류를 최소화하고 적은 노력으로 구현하는 결과를 얻을 수 있다.
- 막연한 작업 기능에 대해 구체적인 방법을 제시하여 준다.
- 사용자의 편의성을 높임으로써 작업 시간 단축과 업무에 대한 이해도를 높여 준다.
- 정보 제공자와 공급자의 원활하고 쉬운 매개역할을 수행한다.

6. [프로토타이핑이란]
추후 구현될 시스템의 골격으로서, 사전에 시스템의 일부분 또는 시스템의 기초모형이 될 것 을 수행하는 과정이다.

7. [UI 프로토타입의 장점과 단점]
- 장점
사용자 설득과 이해가 쉽다, 개발 시간이 감소한다, 오류를 사전에 발견할 수 있다.
- 단점
너무 많은 수정과정을 거친다면 오히려 작업 시간이 늘어날 수 있다. 
사용자의 요구사항은 가능한 들어주되 적절한 타협이 필요하다.
자원 효율성 관점에서 보면 필요 이상으로 자원을 많이 소모한다.
정확한 문서 작업이 생략될 수 있다.

8. [UI 프로토타입 작성 도구 및 방법]
아날로그 - 화이트보드,펜,종이를 이용 포스트잇 사용, 손으로 직접작성
디지털 - 파워포인트, 아크로뱃, 비지오, invision, marvel, html   툴을 사용하여 작성

9. [스토리보드 작성 기법]
1) 메뉴 구성도 만들기(스토리보드 1단계)
전체적인 메뉴 구성도이며, 어떤 것을 보여주고 결정된 사항을 표현하기 위한 메뉴의 순서와 구성 단계, 용어를 정의한다.
2) 스타일 확정(스토리보드 2단계)
레이아웃이나 글자 모양, 크기, 색상, 그래픽에서의 일관성을 유지해야 한다.
3) 설계하기(스토리보드 3단계)
화면에 보여지는 시각적인 디자인 콘셉트를 잡는다.

10. [모범적인 UI 시나리오 문서의 효과]
요구사항 오류가 감소한다.
의사소통 오류가 감소한다.
개발 과정에서의 재작업이 감소하고, 혼선이 최소화된다.
불필요한 기능을 최소화한다.
시나리오 작성과 소프트웨어 개발 비용을 절감한다.
개발 속도를 향상시킨다.
유관부서 만족도를 제고한다.